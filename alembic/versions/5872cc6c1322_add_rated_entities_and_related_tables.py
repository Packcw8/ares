"""Add rated_entities and related tables

Revision ID: 5872cc6c1322
Revises: d4661047ba74
Create Date: 2025-06-15 12:07:57.253195

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5872cc6c1322'
down_revision: Union[str, None] = 'd4661047ba74'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rated_entities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('jurisdiction', sa.String(), nullable=True),
    sa.Column('reputation_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rated_entities_id'), 'rated_entities', ['id'], unique=False)
    op.drop_index(op.f('ix_feedbacks_id'), table_name='feedbacks')
    op.drop_table('feedbacks')
    op.drop_index(op.f('ix_complaints_id'), table_name='complaints')
    op.drop_table('complaints')
    op.drop_index(op.f('ix_officials_id'), table_name='officials')
    op.drop_table('officials')
    op.create_foreign_key(None, 'evidence_attachments', 'rated_entities', ['entity_id'], ['id'])
    op.create_foreign_key(None, 'rating_scores', 'rated_entities', ['entity_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'rating_scores', type_='foreignkey')
    op.drop_constraint(None, 'evidence_attachments', type_='foreignkey')
    op.create_table('officials',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('officials_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('position', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('agency', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('jurisdiction', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('reputation_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='officials_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_officials_id'), 'officials', ['id'], unique=False)
    op.create_table('complaints',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('official_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('severity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('verified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['official_id'], ['officials.id'], name=op.f('complaints_official_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('complaints_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('complaints_pkey'))
    )
    op.create_index(op.f('ix_complaints_id'), 'complaints', ['id'], unique=False)
    op.create_table('feedbacks',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('official_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('comment', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('impact', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['official_id'], ['officials.id'], name=op.f('feedbacks_official_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('feedbacks_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('feedbacks_pkey'))
    )
    op.create_index(op.f('ix_feedbacks_id'), 'feedbacks', ['id'], unique=False)
    op.drop_index(op.f('ix_rated_entities_id'), table_name='rated_entities')
    op.drop_table('rated_entities')
    # ### end Alembic commands ###
